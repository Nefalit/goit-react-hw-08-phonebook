{"version":3,"file":"static/js/577.353240dd.chunk.js","mappings":"6QAAaA,EAAe,CACxBC,MAAO,GACPC,SAAU,ICFDC,EACF,CACHC,MAAO,QACPC,KAAM,QACNC,KAAM,QACNC,YAAa,cACbC,UAAU,GANLL,EAQC,CACNC,MAAO,WACPC,KAAM,WACNC,KAAM,WACNC,YAAa,iBACbC,UAAU,GCZlB,EAAuB,yBAAvB,EAAsD,wB,UCuBtD,EAdkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,GAA8CC,EAAAA,EAAAA,GAAQ,CAAED,SAAAA,EAAUT,aAAAA,IAA1DW,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAErBZ,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,SAEf,OACI,kBAAMY,UAAWC,EAAQN,SAAUI,EAAnC,WACI,SAACG,EAAA,GAAD,QAAWC,MAAOhB,EAAOiB,SAAUN,GAAkBT,KACrD,SAACa,EAAA,GAAD,QAAWC,MAAOf,EAAUgB,SAAUN,GAAkBT,KACxD,mBAAQW,UAAWC,EAAOT,KAAK,SAA/B,uBClBZ,EAAwB,0BC0CxB,EA5BkB,WAChB,IAAMa,GAAUC,EAAAA,EAAAA,KAChB,GAA2BC,EAAAA,EAAAA,IAAYC,EAAAA,IAA/BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAGTC,GAAWC,EAAAA,EAAAA,MAMjB,OAAIP,GACK,SAAC,KAAD,CAAUQ,GAAG,eAIpB,2BACE,iBAAKb,UAAU,YAAf,WACE,eAAIA,UAAWC,EAAf,yBACA,SAAC,EAAD,CAAWN,SAZD,SAAAmB,GACdH,GAASI,EAAAA,EAAAA,IAAMD,OAYVJ,IAAW,cAAGV,UAAU,UAAb,wBACXS,IAAS,eAAGT,UAAU,QAAb,qBAA8BS,EAAMO,WAC7CP,IAAS,cAAGT,UAAU,QAAb,wD,6ECpClB,EAAwB,0BAAxB,EAA0D,0BAA1D,EAA4F,0B,UCKtFE,EAAY,SAAC,GAQZ,IAPLZ,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAY,EAKI,EALJA,MACAC,EAII,EAJJA,SACAX,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAF,EACI,EADJA,KAEMyB,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,QAAU,IAEnC,OACE,iBAAKnB,UAAWC,EAAhB,UACGX,IACC,mBAAOU,UAAWC,EAASmB,QAASH,EAApC,UACG3B,EADH,IACW,QAGb,kBACEU,UAAWC,EACXgB,GAAIA,EACJ1B,KAAMA,EACNY,MAAOA,EACPC,SAAUA,EACVX,YAAaA,EACbC,SAAUA,EACVF,KAAMA,QAMd,IAEAU,EAAUmB,aAAe,CACvB7B,KAAM,OACNE,UAAU,I,gECjBZ,IAvBgB,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,SAAUT,EAAkC,EAAlCA,aAAkC,IAApBoC,QAAAA,OAAoB,SAC1D,GAA0BC,EAAAA,EAAAA,WAAS,UAAIrC,IAAvC,eAAOW,EAAP,KAAc2B,EAAd,KAmBA,MAAO,CAAC3B,MAAAA,EAAO2B,SAAAA,EAAU1B,aAjBJ,SAAC,GAAc,IAAb2B,EAAY,EAAZA,OACXlC,EAA+BkC,EAA/BlC,KAAMY,EAAyBsB,EAAzBtB,MAAOX,EAAkBiC,EAAlBjC,KAAMkC,EAAYD,EAAZC,QACrBC,EAAoB,aAATnC,EAAsBkC,EAAUvB,EACjDqB,GAAS,SAAAI,GAAS,yBACXA,GADW,cAEbrC,EAAOoC,QAYuB5B,aARlB,SAAC8B,GAClBA,EAAEC,iBACFnC,GAAS,UAAIE,IACVyB,GACCE,GAAS,UAAItC","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/login-form.module.css?1212","components/LoginForm/LoginForm.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/login-page.module.css?8795","pages/LoginPage/LoginPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const initialState = {\n    email: \"\",\n    password: \"\"\n}","export const fields = {\n    email: {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Input email\",\n        required: true,\n    },\n    password: {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Input password\",\n        required: true,\n    },\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"login-form_form__S9chl\",\"btn\":\"login-form_btn__83mr+\"};","import PropTypes from 'prop-types';\n\nimport useForm from \"../../shared/hooks/useForm\";\n\nimport TextField from \"../../shared/components/TextField/TextField\";\n\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\nimport s from \"./login-form.module.css\"\n\nconst LoginForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({ onSubmit, initialState });\n\n    const { email, password } = state;\n\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <TextField value={email} onChange={handleChange} {...fields.email} />\n            <TextField value={password} onChange={handleChange} {...fields.password} />\n            <button className={s.btn} type=\"submit\">Login</button>\n        </form>\n    )\n}\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"login-page_title__QyttL\"};","import { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n\nimport useAuth from '../../shared/hooks/useAuth';\nimport { getAuth } from '../../redux/auth/auth-selectors';\n\n\nimport { login } from '../../redux/auth/auth-operations';\n\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nimport s from \"./login-page.module.css\"\n\nconst LoginPage = () => {\n  const isLogin = useAuth();\n  const { error, loading } = useSelector(getAuth);\n\n\n  const dispatch = useDispatch();\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <main>\n      <div className=\"container\">\n        <h2 className={s.title}>Login Page</h2>\n        <LoginForm onSubmit={onLogin} />\n        {loading && <p className=\"loading\">...Loading</p>}\n        {error && <p className=\"error\">Error : {error.message}</p>}\n        {error && <p className=\"error\">Bad password or email, try again...</p>}\n      </div>\n    </main>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"text-field_block__JkCnA\",\"label\":\"text-field_label__VYX-y\",\"input\":\"text-field_input__YM8fs\"};","import { useMemo } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport PropTypes from 'prop-types';\n\nimport s from './text-field.module.css';\n\nconst TextField = ({\n  label,\n  name,\n  value,\n  onChange,\n  placeholder,\n  required,\n  type,\n}) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={s.block}>\n      {label && (\n        <label className={s.label} htmlFor={id}>\n          {label}:{' '}\n        </label>\n      )}\n      <input\n        className={s.input}\n        id={id}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={required}\n        type={type}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.defaultProps = {\n  type: 'text',\n  required: false,\n};\n\nTextField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import {useState} from \"react\";\n\nconst useForm = ({onSubmit, initialState, isReset = true}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        if(isReset) {\n            setState({...initialState})\n        }\n    };\n\n    return {state, setState, handleChange, handleSubmit};\n}\n\nexport default useForm;"],"names":["initialState","email","password","fields","label","name","type","placeholder","required","onSubmit","useForm","state","handleChange","handleSubmit","className","s","TextField","value","onChange","isLogin","useAuth","useSelector","getAuth","error","loading","dispatch","useDispatch","to","data","login","message","id","useMemo","nanoid","htmlFor","defaultProps","isReset","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}